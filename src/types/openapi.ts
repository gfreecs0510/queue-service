/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/jobs/create": {
    /**
     * create job
     * @description use this API to create a job
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateJobRequestBody"];
        };
      };
      responses: {
        /** @description job created successfuly */
        200: {
          content: {
            "application/json": components["schemas"]["CreateJobResponse"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
  "/jobs/{page_token}": {
    /**
     * get the latest jobs
     * @description get the latest jobs, returns with page token
     */
    get: {
      parameters: {
        path: {
          /** @description page token, to paginate jobs. if blank, it will retrieve the first 100 */
          page_token: string;
        };
      };
      responses: {
        /** @description success */
        200: {
          content: {
            "application/json": components["schemas"]["GetJobs"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
  "/jobs/{id}/{page_token}": {
    /**
     * get job details via id
     * @description use this API to get the job details plus the tasks via id
     */
    get: {
      parameters: {
        path: {
          id: string;
          /** @description page token, to paginate Tasks. if blank, it will retrieve the first 100 */
          page_token: string;
        };
      };
      responses: {
        /** @description success */
        200: {
          content: {
            "application/json": components["schemas"]["GetJob"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateJobRequestBody: {
      /**
       * @description name of the json file
       * @example for_create.json
       */
      json_filename?: string;
      /**
       * @description the number of rows in json, use to determine when the loop will end
       * @example 100
       */
      row_count?: number;
    };
    CreateJobResponse: {
      /**
       * @description The unique identifier of the job.
       * @example ABC123
       */
      id?: string;
      /**
       * @description url to upload the json
       * @example https://aws-123.com
       */
      s3_url?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      created_at?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      updated_at?: string;
      /** @example gfreecs0510@gmail.com */
      created_by?: string;
      /** @example gfreecs0510@gmail.com */
      updated_by?: string;
    };
    Job: {
      /**
       * @description The unique identifier of the job.
       * @example ABC123
       */
      id?: string;
      /** @example for_create.json */
      json_filename?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      created_at?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      updated_at?: string;
      /** @example gfreecs0510@gmail.com */
      created_by?: string;
      /** @example gfreecs0510@gmail.com */
      updated_by?: string;
      /** @example 100 */
      total_task?: number;
      /** @example 40 */
      total_successful_task?: number;
      /** @example 10 */
      total_failed_task?: number;
    };
    Task: {
      /** @example ABC123 */
      id?: string;
      /** @example FE00001 */
      record_id?: string;
      /** @example pass */
      status?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      created_at?: string;
      /** @example "2024-01-01T00:00:00.000Z" */
      updated_at?: string;
    };
    GetJob: {
      job?: components["schemas"]["Job"];
      tasks?: components["schemas"]["Task"][];
      /**
       * @description only available to retrieve the next 100 tasks
       * @example ABC123
       */
      page_token?: string;
    };
    GetJobs: {
      jobs?: components["schemas"]["Job"][];
      /**
       * @description only available to retrieve the next 100 tasks
       * @example ABC123
       */
      page_token?: string;
    };
    ErrorResponse: {
      /**
       * @description Error has occured
       * @example Error has occured
       */
      error?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
